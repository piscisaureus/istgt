cmake_minimum_required(VERSION 2.8.0)
project(istgt)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

add_definitions(-DHAVE_CONFIG_H)

if(WIN32)
    link_libraries(ws2_32)
else()
    link_libraries(pthread)
endif()

if(MSVC)
    add_compile_options(/Wall /wd4201 /wd4206 /wd4267 /wd4242 /wd4310 /wd4244 /wd4820 /wd4996 /wd4710 /wd4255)
else()
    add_compile_options(-Wall -Wno-unused-but-set-variable)
endif()

file(GLOB_RECURSE ISTGT_SOURCES src/istgt/*.c src/istgt/*.h)
file(GLOB_RECURSE EXE_SOURCES src/exe/*.c)
file(GLOB_RECURSE LIB_SOURCES src/lib/*.h)

foreach(EXE_SOURCE ${EXE_SOURCES})
    get_filename_component(EXE_NAME ${EXE_SOURCE} NAME_WE)
    add_executable(${EXE_NAME} ${EXE_SOURCE} ${ISTGT_SOURCES})
    target_include_directories(${EXE_NAME} PUBLIC src/lib src/istgt)
endforeach(EXE_SOURCE ${EXE_SOURCES})

foreach(LIB_SOURCE ${LIB_SOURCES})
    get_filename_component(LIB_NAME ${LIB_SOURCE} NAME_WE)
    add_library(${LIB_NAME} ${LIB_SOURCE} ${ISTGT_SOURCES})
    target_include_directories(${LIB_NAME} PUBLIC src/lib)
	if(MSVC)
		target_compile_options(${LIB_NAME} PUBLIC "-FI ${LIB_SOURCE}")
	    target_compile_definitions(${LIB_NAME} PUBLIC "-D${LIB_NAME}_export=__declspec(dllexport)" )
	else()
		target_compile_options(${LIB_NAME} PUBLIC -include ${LIB_SOURCE} -fvisibility=hidden)
	    target_compile_definitions(${LIB_NAME} PUBLIC "-D${LIB_NAME}_export=__attribute__((visibility(\"default\")))")
	endif()
endforeach(LIB_SOURCE ${LIB_SOURCES})
